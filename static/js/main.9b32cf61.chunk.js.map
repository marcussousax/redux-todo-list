{"version":3,"sources":["reportWebVitals.js","store/Todos/Todos.selectors.js","store/Todos/TodosUndoRedo.js","components/Header/index.jsx","components/Footer/index.jsx","store/Todos/Todos.actions.js","store/Todos/Todos.reducer.js","store/store.js","components/List/index.jsx","components/List/ListItem.jsx","App.jsx","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","selectTodos","state","todos","present","selectTodosCount","length","selectCompletedTodosCount","filter","todo","completed","selectUndoable","past","future","Boolean","TodosUndoRedo","canUndo","canRedo","onUndo","onRedo","className","onClick","disabled","mapDispatchToProps","UndoActionCreators","undo","redo","connect","Header","TotalCounter","todosCount","useSelector","Footer","inputValue","setInputValue","dispatch","useDispatch","CompletedCounter","completedCount","onSubmit","e","value","preventDefault","type","payload","addTodo","handleSubmit","onChange","target","placeholder","undoable","action","map","rootReducer","combineReducers","todosReducer","persistedReducer","persistReducer","key","storage","store","createStore","undefined","window","__REDUX_DEVTOOLS_EXTENSION__","persistedStore","persistStore","List","children","title","localStorage","clear","ActionCreators","clearHistory","ListItem","item","toggleComplete","handleDelete","App","React","useState","index","ReactDOM","render","StrictMode","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.9b32cf61.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const selectTodos = state => state.todos.present\nexport const selectTodosCount = state => state.todos.present.length\nexport const selectCompletedTodosCount = state => state.todos.present.filter(todo => todo.completed === true).length\nexport const selectUndoable = state => {\n    const {past, future} = state.todos\n    return Boolean(past.length || future.length)\n}\n","import React from 'react'\nimport { ActionCreators as UndoActionCreators } from 'redux-undo'\nimport { connect } from 'react-redux'\nimport { FaUndoAlt, FaRedoAlt } from 'react-icons/fa'\n\nlet TodosUndoRedo = ({canUndo, canRedo, onUndo, onRedo}) => (\n    <div className={'undo-redo'}>\n        <button onClick={onUndo} disabled={!canUndo}>\n            <FaUndoAlt /> Undo\n        </button>\n        <button onClick={onRedo} disabled={!canRedo}>\n            <FaRedoAlt /> Redo\n        </button>\n    </div>\n)\n\nconst mapStateToProps = (state) => ({\n    canUndo: state.todos.past.length > 0,\n    canRedo: state.todos.future.length > 0\n})\n\nconst mapDispatchToProps = ({\n    onUndo: UndoActionCreators.undo,\n    onRedo: UndoActionCreators.redo\n})\n\nTodosUndoRedo = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodosUndoRedo)\n\nexport default TodosUndoRedo\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectTodosCount } from '../../store/Todos/Todos.selectors'\nimport TodosUndoRedo from '../../store/Todos/TodosUndoRedo'\n\nimport './index.css'\n\nconst Header = () => {\n\n    const TotalCounter = () => {\n        const todosCount = useSelector(selectTodosCount)\n        return <span><strong>{todosCount}</strong> Item{todosCount !== 1 ? 's' : ''}</span>\n    }\n\n    return (\n        <header>\n            <h1>Todo List</h1>\n            <TotalCounter />\n            <TodosUndoRedo />\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectCompletedTodosCount, selectTodosCount } from '../../store/Todos/Todos.selectors'\nimport { addTodo } from '../../store/Todos/Todos.actions'\n\nimport './index.css'\n\nconst Footer = ({inputValue, setInputValue}) => {\n\n    const dispatch = useDispatch()\n    const todosCount = useSelector(selectTodosCount)\n\n    const CompletedCounter = () => {\n        const completedCount = useSelector(selectCompletedTodosCount)\n\n        if (todosCount === completedCount && todosCount !== 0) {\n            return (\n                <div className={'completed-status'}>\n                    <p>Well Done! 🎉 🎉</p>\n                </div>\n            )\n        }\n\n        if (todosCount === completedCount) {\n            return null\n        }\n\n        return (\n            <div className={'completed-status'}>\n                <p>{completedCount === 0 ? 'There are no' : <span>{completedCount}</span>} completed\n                    item{completedCount > 1 && 's'}</p>\n            </div>\n        )\n    }\n\n    const handleSubmit = (e, value) => {\n        e.preventDefault()\n        if (value === '') return\n        dispatch(addTodo(value))\n        setInputValue('')\n    }\n\n\n    return (\n        <footer>\n            <CompletedCounter />\n            <form onSubmit={(e) => handleSubmit(e, inputValue)}>\n                <input type=\"text\"\n                       value={inputValue}\n                       onChange={(e) => setInputValue(e.target.value)}\n                       placeholder={'type and press enter'} />\n                <button type={'submit'}>add item</button>\n            </form>\n        </footer>\n    )\n}\n\nexport default Footer\n","export function addTodo(inputValue) {\n    return {\n        type: 'ADD',\n        payload: inputValue\n    }\n}\n\nexport function updateTodo(todo) {\n    return {\n        type: 'UPDATE',\n        payload: todo\n    }\n}\n\nexport function deleteTodo(todo) {\n    return {\n        type: 'DELETE',\n        payload: todo\n    }\n}\n\nexport function deleteAllTodo() {\n    return {\n        type: 'DELETE_ALL',\n        payload: []\n    }\n}\n","import undoable from 'redux-undo'\n\nexport default undoable(function(state = [], action) {\n    switch (action.type) {\n        case 'ADD':\n            return [...state, {\n                value: action.payload, // In this case action.payload receives an input text value\n                completed: false\n            }]\n        case 'DELETE':\n            return state.filter(todo => todo.value !== action.payload.value)\n        case 'UPDATE':\n            return state.map(todo =>\n                todo === action.payload\n                    ? {...todo, completed: !todo.completed}\n                    : todo\n            )\n        case 'DELETE_ALL':\n            return action.payload\n        default:\n            return state\n    }\n})\n\n","import { combineReducers, createStore } from 'redux'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport todosReducer from './Todos/Todos.reducer'\n\nconst rootReducer = combineReducers({\n    todos: todosReducer\n})\n\nconst persistedReducer = persistReducer({\n    key: 'root',\n    storage\n}, rootReducer)\n\nexport const store = createStore(\n    persistedReducer,\n    (typeof window !== undefined && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n)\n\nexport const persistedStore = persistStore(store)\n\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ActionCreators } from 'redux-undo'\nimport { MdDeleteSweep } from 'react-icons/md'\nimport { store } from '../../store/store'\nimport { deleteAllTodo } from '../../store/Todos/Todos.actions'\nimport { selectUndoable } from '../../store/Todos/Todos.selectors'\nimport './index.css'\n\nconst List = ({children}) => {\n\n    const dispatch = useDispatch()\n    const undoable = useSelector(selectUndoable)\n\n    const handleDeleteAll = () => {\n        dispatch(deleteAllTodo())\n        window.localStorage.clear()\n        store.dispatch(ActionCreators.clearHistory())\n    }\n\n    return (\n        <div className={'list-wrapper'}>\n            <div className={'list-toolbar'}>\n                <button disabled={!undoable} title={'remove all'} className={'btn-delete btn-delete-all'}\n                        onClick={handleDeleteAll}>\n                    <MdDeleteSweep />\n                    <span className={'btn-label'}>remove all (will clear undo history)</span>\n                </button>\n            </div>\n            <ol>\n                {children}\n            </ol>\n        </div>\n    )\n}\n\nexport default List\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { MdCheckCircle, MdDelete } from 'react-icons/md'\nimport { deleteTodo, updateTodo } from '../../store/Todos/Todos.actions'\n\nconst ListItem = ({item}) => {\n\n    const dispatch = useDispatch()\n\n    const handleDelete = (item) => {\n        dispatch(deleteTodo(item))\n    }\n\n    const toggleComplete = (item) => {\n        dispatch(updateTodo(item))\n    }\n\n    return (\n        <li className={'list-item'}>\n            <button className={`btn-complete ${item.completed ? 'completed' : ''} `}\n                    onClick={() => toggleComplete(item)}>\n                <MdCheckCircle />\n            </button>\n            <span\n                className={`list-item-content ${item.completed ? 'completed' : ''}`}>{item.value}</span>\n            <button className={'btn-delete'} onClick={() => handleDelete(item)}><MdDelete /></button>\n        </li>\n    )\n}\n\nexport default ListItem\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './App.css'\nimport { selectTodos } from './store/Todos/Todos.selectors'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport List from './components/List'\nimport ListItem from './components/List/ListItem'\n\nfunction App() {\n\n    const todos = useSelector(selectTodos)\n\n    const [inputValue, setInputValue] = React.useState('')\n\n    return (\n        <div className=\"App\">\n            <Header />\n            {todos.length === 0 ? (\n                    <div className={'app-blankstate'}>\n                        <p>(╯°□°）╯︵ ┻━┻</p>\n                        <p>You don’t have any todos yet.</p>\n                    </div>\n                ) :\n                <List>\n                    {todos.map((item, index) =>\n                        <ListItem key={index} item={item} />\n                    )}\n                </List>\n            }\n            <Footer inputValue={inputValue} setInputValue={setInputValue} />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport reportWebVitals from './reportWebVitals'\nimport './index.css'\nimport App from './App'\nimport { persistedStore, store } from './store/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate persistor={persistedStore}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}