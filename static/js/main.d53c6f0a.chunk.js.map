{"version":3,"sources":["reportWebVitals.js","store/Todos/Todos.selectors.js","store/Todos/TodosUndoRedo.js","components/Header/index.jsx","store/Todos/Todos.reducer.js","store/store.js","components/Footer/index.jsx","store/Todos/Todos.actions.js","components/List/index.jsx","components/List/ListItem.jsx","App.jsx","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","selectTodos","state","todos","present","selectTodosCount","length","selectCompletedTodosCount","filter","todo","completed","selectUndoable","past","future","Boolean","TodosUndoRedo","canUndo","canRedo","onUndo","onRedo","className","onClick","disabled","mapDispatchToProps","UndoActionCreators","undo","redo","connect","Header","TotalCounter","todosCount","useSelector","undoable","action","type","value","payload","map","newValue","rootReducer","combineReducers","todosReducer","persistedReducer","persistReducer","key","storage","store","createStore","undefined","window","__REDUX_DEVTOOLS_EXTENSION__","persistedStore","persistStore","Footer","inputValue","setInputValue","dispatch","useDispatch","handleResetApp","localStorage","clear","ActionCreators","clearHistory","CompletedCounter","completedCount","title","onSubmit","e","preventDefault","addTodo","handleSubmit","onChange","target","placeholder","List","children","EditingInput","props","React","useState","handleEdit","autoFocus","ListItem","item","isEditing","setIsEditing","toggleComplete","editTodo","handleDelete","App","index","ReactDOM","render","StrictMode","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.d53c6f0a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const selectTodos = state => state.todos.present\nexport const selectTodosCount = state => state.todos.present.length\nexport const selectCompletedTodosCount = state => state.todos.present.filter(todo => todo.completed === true).length\nexport const selectUndoable = state => {\n    const {past, future} = state.todos\n    return Boolean(past.length || future.length)\n}\n","import React from 'react'\nimport { ActionCreators as UndoActionCreators } from 'redux-undo'\nimport { connect } from 'react-redux'\nimport { FaUndoAlt, FaRedoAlt } from 'react-icons/fa'\n\nlet TodosUndoRedo = ({canUndo, canRedo, onUndo, onRedo}) => (\n    <div className={'undo-redo'}>\n        <button onClick={onUndo} disabled={!canUndo}>\n            <FaUndoAlt /> Undo\n        </button>\n        <button onClick={onRedo} disabled={!canRedo}>\n            <FaRedoAlt /> Redo\n        </button>\n    </div>\n)\n\nconst mapStateToProps = (state) => ({\n    canUndo: state.todos.past.length > 0,\n    canRedo: state.todos.future.length > 0\n})\n\nconst mapDispatchToProps = ({\n    onUndo: UndoActionCreators.undo,\n    onRedo: UndoActionCreators.redo\n})\n\nTodosUndoRedo = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodosUndoRedo)\n\nexport default TodosUndoRedo\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectTodosCount } from '../../store/Todos/Todos.selectors'\nimport TodosUndoRedo from '../../store/Todos/TodosUndoRedo'\n\nimport './index.css'\n\nconst Header = () => {\n\n    const TotalCounter = () => {\n        const todosCount = useSelector(selectTodosCount)\n        return <span><strong>{todosCount}</strong> Item{todosCount !== 1 ? 's' : ''}</span>\n    }\n\n    return (\n        <header>\n            <h1>Todo List</h1>\n            <TotalCounter />\n            <TodosUndoRedo />\n        </header>\n    )\n}\n\nexport default Header\n","import undoable from 'redux-undo'\n\nexport default undoable(function (state = [], action) {\n    switch (action.type) {\n        case 'ADD':\n            return [...state, {\n                value: action.payload, // In this case action.payload receives an input text value\n                completed: false\n            }]\n        case 'EDIT':\n            return state.map(todo => todo.value === action.payload.todo.value\n                ? {...state, value: action.payload.newValue}\n                : todo)\n        case 'DELETE':\n            return state.filter(todo => todo.value !== action.payload.value)\n        case 'UPDATE':\n            return state.map(todo =>\n                todo === action.payload\n                    ? {...todo, completed: !todo.completed}\n                    : todo\n            )\n        case 'DELETE_ALL':\n            return action.payload\n        default:\n            return state\n    }\n})\n\n","import { combineReducers, createStore } from 'redux'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport todosReducer from './Todos/Todos.reducer'\n\nconst rootReducer = combineReducers({\n    todos: todosReducer\n})\n\nconst persistedReducer = persistReducer({\n    key: 'root',\n    storage\n}, rootReducer)\n\nexport const store = createStore(\n    persistedReducer,\n    (typeof window !== undefined && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n)\n\nexport const persistedStore = persistStore(store)\n\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ActionCreators } from 'redux-undo'\nimport { MdHistory } from 'react-icons/md'\n\nimport { selectCompletedTodosCount, selectTodosCount, selectUndoable } from '../../store/Todos/Todos.selectors'\nimport { addTodo, deleteAllTodo } from '../../store/Todos/Todos.actions'\nimport { store } from '../../store/store'\nimport './index.css'\n\nconst Footer = ({inputValue, setInputValue}) => {\n\n    const dispatch = useDispatch()\n    const todosCount = useSelector(selectTodosCount)\n    const undoable = useSelector(selectUndoable)\n\n\n    const handleResetApp = () => {\n        dispatch(deleteAllTodo())\n        window.localStorage.clear()\n        store.dispatch(ActionCreators.clearHistory())\n    }\n\n    const CompletedCounter = () => {\n        const completedCount = useSelector(selectCompletedTodosCount)\n\n        if (todosCount === completedCount && todosCount !== 0) {\n            return (\n                <div className={'completed-status'}>\n                    <p>Well Done! 🎉 🎉</p>\n                </div>\n            )\n        }\n\n        if (todosCount === completedCount) {\n            return null\n        }\n\n        return (\n            <div className={'completed-status'}>\n                <p>{completedCount === 0 ? 'There are no' : <span>{completedCount}</span>} completed\n                    item{completedCount > 1 && 's'}</p>\n\n                <button disabled={!undoable} title={'Reset App'} className={'btn-reset-app'}\n                        onClick={handleResetApp}>\n                    <MdHistory />\n                    <span className={'btn-label'}>Reset App (this will clear undo history)</span>\n                </button>\n            </div>\n        )\n    }\n\n    const handleSubmit = (e, value) => {\n        e.preventDefault()\n        if (value === '') return\n        dispatch(addTodo(value))\n        setInputValue('')\n    }\n\n\n    return (\n        <footer>\n            <CompletedCounter />\n            <form onSubmit={(e) => handleSubmit(e, inputValue)}>\n                <input type=\"text\"\n                       value={inputValue}\n                       onChange={(e) => setInputValue(e.target.value)}\n                       placeholder={'type and press enter'} />\n                <button type={'submit'}>add item</button>\n            </form>\n        </footer>\n    )\n}\n\nexport default Footer\n","export function addTodo(inputValue) {\n    return {\n        type: 'ADD',\n        payload: inputValue\n    }\n}\n\nexport function editTodo(todo, newValue) {\n    return {\n        type: 'EDIT',\n        payload: {\n            todo,\n            newValue\n        }\n    }\n}\n\nexport function updateTodo(todo) {\n    return {\n        type: 'UPDATE',\n        payload: todo\n    }\n}\n\nexport function deleteTodo(todo) {\n    return {\n        type: 'DELETE',\n        payload: todo\n    }\n}\n\nexport function deleteAllTodo() {\n    return {\n        type: 'DELETE_ALL',\n        payload: []\n    }\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { MdDeleteSweep } from 'react-icons/md'\nimport { deleteAllTodo } from '../../store/Todos/Todos.actions'\nimport './index.css'\n\nconst List = ({children}) => {\n\n    const dispatch = useDispatch()\n\n    const handleDeleteAll = () => {\n        dispatch(deleteAllTodo())\n    }\n\n    return (\n        <div className={'list-wrapper'}>\n            <div className={'list-toolbar'}>\n                <button className={'btn-delete btn-delete-all'}\n                        onClick={handleDeleteAll}>\n                    <MdDeleteSweep />\n                    <span className={'btn-label'}>Clear all</span>\n                </button>\n            </div>\n            <ol>\n                {children}\n            </ol>\n        </div>\n    )\n}\n\nexport default List\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { MdCheckCircle, MdDelete, MdEdit } from 'react-icons/md'\nimport { editTodo, deleteTodo, updateTodo } from '../../store/Todos/Todos.actions'\n\nconst ListItem = ({item}) => {\n    const [isEditing, setIsEditing] = React.useState(false)\n    const dispatch = useDispatch()\n\n    const handleEdit = (newValue) => {\n        dispatch(editTodo(item, newValue))\n    }\n\n    const handleDelete = (item) => {\n        dispatch(deleteTodo(item))\n    }\n\n    const toggleComplete = (item) => {\n        dispatch(updateTodo(item))\n    }\n\n    return (\n        <li className={`list-item`}>\n            <button disabled={isEditing} className={`btn-complete ${item.completed ? 'completed' : ''} `}\n                    onClick={() => toggleComplete(item)}>\n                <MdCheckCircle />\n            </button>\n            <span\n                className={`list-item-content ${item.completed ? 'completed' : ''}`}>\n                {isEditing ? <EditingInput handleEdit={handleEdit} value={item.value} /> : item.value}\n            </span>\n            <button className={`btn-edit ${isEditing ? 'is-editing' : ''} `} onClick={() => setIsEditing(!isEditing)}><MdEdit /></button>\n            <button disabled={isEditing} className={'btn-delete'} onClick={() => handleDelete(item)}><MdDelete />\n            </button>\n        </li>\n    )\n}\n\nconst EditingInput = (props) => {\n    const [inputValue, setInputValue] = React.useState(props.value)\n    return (\n        <form onSubmit={(e) => props.handleEdit(inputValue)}>\n            <input type=\"text\"\n                   value={inputValue}\n                   autoFocus={true}\n                   onChange={(e) => setInputValue(e.target.value)}\n                   placeholder={'type and press enter'} />\n            <button type={'submit'}>update item</button>\n        </form>\n    )\n}\n\nexport default ListItem\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './App.css'\nimport { selectTodos } from './store/Todos/Todos.selectors'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport List from './components/List'\nimport ListItem from './components/List/ListItem'\n\nfunction App() {\n\n    const todos = useSelector(selectTodos)\n\n    const [inputValue, setInputValue] = React.useState('')\n\n    return (\n        <div className=\"App\">\n            <Header />\n            {todos.length === 0 ? (\n                    <div className={'app-blankstate'}>\n                        <p>(╯°□°）╯︵ ┻━┻</p>\n                        <p>You don’t have any todos yet.</p>\n                    </div>\n                ) :\n                <List>\n                    {todos.map((item, index) =>\n                        <ListItem key={index} item={item} />\n                    )}\n                </List>\n            }\n            <Footer inputValue={inputValue} setInputValue={setInputValue} />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport reportWebVitals from './reportWebVitals'\nimport './index.css'\nimport App from './App'\nimport { persistedStore, store } from './store/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate persistor={persistedStore}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}